# This is a basic workflow to help you get started with Actions

name: main

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1.3.0
      with:
        # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x)
        java-version: 12

    - name: Gradle Wrapper Cache
      uses: actions/cache@v1.1.2
      with:
        # A directory to store and save the cache
        path: .gradle/wrapper
        # An explicit key for restoring and saving the cache
        key: gradle-wrapper-cache

    - name: Gradle Download Cache
      uses: actions/cache@v1.1.2
      with:
        # A directory to store and save the cache
        path: .gradle/caches
        # An explicit key for restoring and saving the cache
        key: gradle-download-cache

    - name: Prep
      run: |
        export GRADLE_USER_HOME=`pwd`/.gradle
        rm -f  .gradle/caches/modules-2/modules-2.lock
        rm -fr .gradle/caches/*/plugin-resolution/
        export GRADLE_OPTS="-Dorg.gradle.daemon=false"

    # Runs a single command using the runners shell
    - name: build
      run: ./gradlew build -x check

    # Runs a set of commands using the runners shell
    - name: check
      run: ./gradlew check
